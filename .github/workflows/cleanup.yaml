name: cleanup

on:
  schedule:
    # At minute 30 past every 6th hour from 5 through 18 on every day-of-week from Monday through Friday.
    # 6:30, 12:30, 18:30
    - cron: '30 5-18/6 * * 1-5'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

env:
  AWS_REGION: us-west-1
  AWS_ROLE: arn:aws:iam::270074865685:role/terraform-module-ci-test
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  leftovers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: matttrach/nix-installer-action@main
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{env.AWS_ROLE}}
          role-session-name: ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
          aws-region: ${{env.AWS_REGION}}
      - name: Get Ids
        shell: 'nix develop --ignore-environment --extra-experimental-features nix-command --extra-experimental-features flakes --keep HOME --keep SSH_AUTH_SOCK --keep GITHUB_TOKEN --keep ZONE --keep AWS_ROLE --keep AWS_REGION --keep AWS_DEFAULT_REGION --keep AWS_ACCESS_KEY_ID --keep AWS_SECRET_ACCESS_KEY --keep AWS_SESSION_TOKEN --keep UPDATECLI_GPGTOKEN --keep UPDATECLI_GITHUB_TOKEN --keep UPDATECLI_GITHUB_ACTOR --keep GPG_SIGNING_KEY --keep NIX_ENV_LOADED --keep TERM --command bash -e {0}'
        id: get_ids
        # 86400 = 24 hours in seconds (24 * 60 * 60)
        # you might increase this number if you need to look back further for leftovers
        run: |
          DATA="$( \
            curl -s \
              --header 'Authorization: Bearer ${{secrets.GITHUB_TOKEN}}' \
              '${{github.api_url}}/repos/${{github.repository}}/actions/runs' \
            | jq -r '.workflow_runs[] | select(.created_at > (now - 86400)) | select(.status != "in_progress") | select((.name |= ascii_downcase | .name) == "release") | "\((.name |= ascii_downcase | .name))-\(.id)-\(.run_number)-\(.run_attempt)"' \
            | jq -R -s -c 'split("\n")[:-1]' \
          )"
          echo ids="$DATA" >> "$GITHUB_OUTPUT"
      # rather than actually delete things, it errors and notifies so that you can run leftovers interactively
      # WARNING! if '--filter=""' then you will find everything in a region
      # WARNING! if '-d' is missing you will delete everything that is found
      - name: find-leftovers
        shell: 'nix develop --ignore-environment --extra-experimental-features nix-command --extra-experimental-features flakes --keep HOME --keep SSH_AUTH_SOCK --keep GITHUB_TOKEN --keep ZONE --keep AWS_ROLE --keep AWS_REGION --keep AWS_DEFAULT_REGION --keep AWS_ACCESS_KEY_ID --keep AWS_SECRET_ACCESS_KEY --keep AWS_SESSION_TOKEN --keep UPDATECLI_GPGTOKEN --keep UPDATECLI_GITHUB_TOKEN --keep UPDATECLI_GITHUB_ACTOR --keep GPG_SIGNING_KEY --keep NIX_ENV_LOADED --keep TERM --command bash -e {0}'
        run: |
          check_leftovers() {
            local id="$1"
            local region="$2"
            echo "checking for leftovers in $region for $id"
            leftovers -d --iaas=aws --aws-region="$region" --filter="$id" \
              | grep -Pv 'is not authorized to perform|status code:|Access Denied' \
              >> leftovers.output
            return $?
          }
          issue_body() {
            local region="$1"
            local id="$2"
            local output="$3"
            local url="$4"
            local found="Leftovers were found in region $region with id $id.\n"
            local tics='\n```\n'
            BODY="$found $url $tics $output $tics"
            echo -n "$BODY"
          }
          post_issue() {
            local id="$1"
            local region="$2"
            local output="$3"
            echo "found some leftovers for $id in $region"
            echo "please clean up with leftovers tool"
            local url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            echo -n '{"title":"Leftovers Found!","body":"' > data.json
            issue_body "$region" "$id" "$output" "$url" >> data.json
            echo -n '","labels":["leftovers"]}' >> data.json
            cat data.json
            jq '.' data.json
            curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d @data.json "${{ github.api_url }}/repos/${{ github.repository }}/issues"
          }

          ID_LIST='${{ steps.get_ids.outputs.ids }}'
          DATA=$(jq -r .[] <<< "$ID_LIST")
          echo "" > leftovers.output
          REGIONS="us-west-1 us-west-2"

          for id in $DATA; do
            for region in $REGIONS; do
              if check_leftovers "$id" "$region"; then
                output="$(awk '{printf "%s\\n", $0}' leftovers.output)";
                post_issue "$id" "$region" "$output";
                exit 1;
              fi
            done
          done
